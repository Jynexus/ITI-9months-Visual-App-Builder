<UserControl:Block
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             x:Name="blockControl" x:Class="Grid.forBlock" 
             xmlns:UserControl="clr-namespace:ResourceClasses;assembly=ResourceClasses"
             mc:Ignorable="d" d:DesignWidth="300" Height="305.666" SizeChanged="blockControl_SizeChanged" >

    <UserControl.Resources>
        <SolidColorBrush x:Key="BackgroundBrush">#222</SolidColorBrush>
        <SolidColorBrush x:Key="BorderBrush">LightSteelBlue</SolidColorBrush>
        <SolidColorBrush x:Key="BlueBrush">#FF007ACC</SolidColorBrush>
    </UserControl.Resources>

    <Border x:Name="borderOuter" Background="{DynamicResource BackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="10">
        <StackPanel x:Name="stackPanelOuter">
            <Border x:Name="connectionTop" Height="8" CornerRadius="3" Background="#FF007ACC" Margin="10,6,10,0" VerticalAlignment="Top" AllowDrop="True" />
            <Grid Height="30">
                <Label x:Name="labelBlockName" Content="Iteration" HorizontalAlignment="Left" Margin="30,1,0,0" VerticalAlignment="Top" Foreground="#FFBFBFBF" Height="26" Width="55"/>
                <Ellipse x:Name="statusIndicator" HorizontalAlignment="Left" Height="17" Width="17" Margin="10,6,0,0" Stroke="#FF007ACC" VerticalAlignment="Top"/>
            </Grid>
            <Label x:Name="labelSeparator" Content="" Margin="10,0,12,0" VerticalAlignment="Top" Background="{DynamicResource BorderBrush}" Height="1">
                <Label.OpacityMask>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
                        <GradientStop Color="Black" Offset="0.8"/>
                        <GradientStop Offset="1"/>
                        <GradientStop Color="Black" Offset="0.2"/>
                        <GradientStop/>
                    </LinearGradientBrush>
                </Label.OpacityMask>
            </Label>


            <Grid Height="24" Margin="10,5,10,0" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="38*"/>
                    <ColumnDefinition Width="101*"/>
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{DynamicResource BlueBrush}" BorderThickness="1" CornerRadius="3, 0, 0, 3">
                    <TextBox Background="{x:Null}" BorderBrush="{x:Null}" IsReadOnly="True" Foreground="{DynamicResource BorderBrush}">Initialization</TextBox>
                </Border>
                <Border x:Name="gridInitialization" BorderBrush="{DynamicResource BlueBrush}" BorderThickness="0, 1, 1, 1" CornerRadius="0, 3, 3, 0" Background="{DynamicResource BorderBrush}" Grid.Column="1">
                    <TextBox x:Name="textBoxInitialization" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{DynamicResource BackgroundBrush}" Text="Type initialization statement"/>
                </Border>
            </Grid>

            <Grid Height="24" Margin="10,5,10,0" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="38*"/>
                    <ColumnDefinition Width="101*"/>
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{DynamicResource BlueBrush}" BorderThickness="1" CornerRadius="3, 0, 0, 3">
                    <TextBox Background="{x:Null}" BorderBrush="{x:Null}" IsReadOnly="True" Foreground="{DynamicResource BorderBrush}" Text="Condition"/>
                </Border>
                <Border x:Name="gridCondition" BorderBrush="{DynamicResource BlueBrush}" BorderThickness="0, 1, 1, 1" CornerRadius="0, 3, 3, 0" Background="{DynamicResource BorderBrush}" Grid.Column="1">
                    <TextBox x:Name="textBoxCondition" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{DynamicResource BackgroundBrush}">Type conditional statement</TextBox>
                </Border>
            </Grid>

            <Grid Height="24" Margin="10,5,10,0" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="38*"/>
                    <ColumnDefinition Width="101*"/>
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{DynamicResource BlueBrush}" BorderThickness="1" CornerRadius="3, 0, 0, 3">
                    <TextBox Background="{x:Null}" BorderBrush="{x:Null}" IsReadOnly="True" Foreground="{DynamicResource BorderBrush}" Text="Increment"/>
                </Border>
                <Border x:Name="gridIncrement" BorderBrush="{DynamicResource BlueBrush}" BorderThickness="0, 1, 1, 1" CornerRadius="0, 3, 3, 0" Background="{DynamicResource BorderBrush}" Grid.Column="1">
                    <TextBox x:Name="textBoxIncrement" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{DynamicResource BackgroundBrush}">Type increment statement</TextBox>
                </Border>
            </Grid>

            <Grid x:Name="gridBody" Margin="10,10,10,0" Height="139" VerticalAlignment="Top">
                <Border BorderBrush="{DynamicResource BlueBrush}" CornerRadius="3, 3, 0, 0" BorderThickness="1" Height="25" VerticalAlignment="Top">
                    <TextBox Background="{x:Null}" BorderBrush="{x:Null}" IsReadOnly="True" Foreground="{DynamicResource BorderBrush}">Body</TextBox>
                </Border>
                <Border BorderBrush="{DynamicResource BlueBrush}" CornerRadius="0, 0, 3, 3" BorderThickness="1, 0, 1, 1" HorizontalAlignment="Left" Width="278" Margin="0,25,0,0">
                    <StackPanel x:Name="stackPanelBody"/>
                </Border>
            </Grid>

            <Border x:Name="connectionBot" CornerRadius="3" Background="#FF007ACC" Margin="10,7,10,0" AllowDrop="True" Height="8" VerticalAlignment="Top" />



        </StackPanel>
    </Border>
</UserControl:Block>
