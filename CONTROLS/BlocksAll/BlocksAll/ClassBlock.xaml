<UserControl:BlockBase
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             x:Name="blockControl" x:Class="VisualApplicationBuilder.Block.ClassBlock" 
             xmlns:UserControl="clr-namespace:VisualApplicationBuilder.ResourceClasses;assembly=ResourceClasses"
             mc:Ignorable="d" Height="300" Width="400" >

    <UserControl.Resources>

        <!-- COMBOBOX : TOGGLE BUTTON -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Border
        			x:Name="Border" 
        			Grid.ColumnSpan="2"
        			CornerRadius="3"
        			Background="{DynamicResource BorderBrush}"
        			BorderBrush="{DynamicResource BlueBrush}"
        			BorderThickness="1" />
                <Border 
        			Grid.Column="0"
        			CornerRadius="3" 
        			Margin="1" 
        			Background="{DynamicResource BackgroundBrush}"
        			BorderBrush="{DynamicResource BlueBrush}"
        			BorderThickness="0,0,1,0" />
                <Path 
        			x:Name="Arrow"
        			Grid.Column="1"     
        			Fill="{DynamicResource BlueBrush}"
        			HorizontalAlignment="Center"
        			VerticalAlignment="Center"
        			Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <!-- COMBOBOX -->
        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
        						x:Name="ToggleButton" 
        						Template="{StaticResource ComboBoxToggleButton}" 
        						Grid.Column="2" 
        						Focusable="false"
        						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        						ClickMode="Press"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
        						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        						Margin="3,3,23,3"
        						VerticalAlignment="Center"
        						HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
        						Style="{x:Null}" 
        						Template="{StaticResource ComboBoxTextBox}" 
        						HorizontalAlignment="Left" 
        						VerticalAlignment="Center" 
        						Margin="3,3,23,3"
        						Focusable="True" 
        						Background="#FF3F3F3F"
        						Foreground="Green"
        						Visibility="Hidden"
        						IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
        						x:Name="Popup"
        						Placement="Bottom"
        						IsOpen="{TemplateBinding IsDropDownOpen}"
        						AllowsTransparency="True" 
        						Focusable="False"
        						PopupAnimation="Slide">

                                <Grid x:Name="DropDown"
        							SnapsToDevicePixels="True"                
        							MinWidth="{TemplateBinding ActualWidth}"
        							MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
        								x:Name="DropDownBorder"
        								Background="{DynamicResource BackgroundBrush}"
        								CornerRadius="5"
        								BorderThickness="1"
        								BorderBrush="{DynamicResource BorderBrush}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- COMBOBOX : ITEM -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
        					Padding="2"
        					SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CHECKBOX -->
        <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"  
                                      Width="14" 
                                      Height="14" 
                                      CornerRadius="7" 
                                      Background="{DynamicResource BackgroundBrush}"
                                      BorderThickness="2"
                                      BorderBrush="{DynamicResource BorderBrush}">
                                    <Path 
                                          Width="7" 
                                          Height="7" 
                                          x:Name="CheckMark"
                                          SnapsToDevicePixels="False" 
                                          Fill="{DynamicResource BorderBrush}">

                                        <Path.Data>
                                            <EllipseGeometry Center="3.5,3.5" RadiusX="3.5" RadiusY="3.5"/>
                                        </Path.Data>
                                    </Path>

                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#DDDDDD" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle 
                                Margin="15,0,0,0"
                                StrokeThickness="1"
                                Stroke="#60000000"
                                StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--COLORS-->
        <SolidColorBrush x:Key="BackgroundBrush">#222</SolidColorBrush>
        <SolidColorBrush x:Key="BorderBrush">LightSteelBlue</SolidColorBrush>
        <SolidColorBrush x:Key="BlueBrush">#FF007ACC</SolidColorBrush>

        <SolidColorBrush x:Key="PressedBrush">#EEE</SolidColorBrush>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    </UserControl.Resources>

    <Border x:Name="borderOuter" Background="{DynamicResource BackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="10">
        <StackPanel x:Name="stackPanelOuter">
            <Grid Height="30">
                <Label x:Name="labelBlockName" Content="class" HorizontalAlignment="Left" Margin="30,1,0,0" VerticalAlignment="Top" Foreground="#FFBFBFBF" Height="26" Width="71"/>
                <Ellipse x:Name="statusIndicator" HorizontalAlignment="Left" Height="17" Width="17" Margin="10,6,0,0" Stroke="#FF007ACC" VerticalAlignment="Top"/>

                <Button Margin="0,2,9,0" VerticalAlignment="Top" Height="25" Width="25" x:Name="buttonRemoveBlock" BorderBrush="{x:Null}" Background="Firebrick" Foreground="{x:Null}" HorizontalAlignment="Right">
                    <Button.OpacityMask>
                        <DrawingBrush>
                            <DrawingBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </DrawingBrush.RelativeTransform>
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Pen>
                                            <Pen Thickness="5" Brush="Black" />
                                        </GeometryDrawing.Pen>

                                        <GeometryDrawing.Geometry>
                                            <EllipseGeometry RadiusX="20" RadiusY="20" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>

                                    <GeometryDrawing Geometry="M-7,-7 L7,7 M7,-7 L-7,7">
                                        <GeometryDrawing.Pen>
                                            <Pen Thickness="5" Brush="Black" />
                                        </GeometryDrawing.Pen>

                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Button.OpacityMask>
                </Button>
            </Grid>
            <Label x:Name="labelSeparator" Content="" Margin="10,0,12,0" VerticalAlignment="Top" Background="{DynamicResource BorderBrush}" Height="1">
                <Label.OpacityMask>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
                        <GradientStop Color="Black" Offset="0.8"/>
                        <GradientStop Offset="1"/>
                        <GradientStop Color="Black" Offset="0.2"/>
                        <GradientStop/>
                    </LinearGradientBrush>
                </Label.OpacityMask>
            </Label>


            <Grid Height="25" Margin="10,10,10,0" VerticalAlignment="Top">
                <ComboBox HorizontalAlignment="Left" Margin="0,0,0,0" Width="152" Name="comboboxModifier" >
                    <ComboBoxItem Content="modifier" IsSelected="True"/>
                </ComboBox>

                <Border Margin="157,0,0,0" BorderThickness="1, 1, 1, 1" CornerRadius="0, 3, 3, 0" BorderBrush="{DynamicResource BlueBrush}" Background="{DynamicResource BorderBrush}">
                    <TextBox Margin="0,0,0,0" TextWrapping="Wrap" Text="class_name" Name="TextboxName" Background="{x:Null}" BorderBrush="{x:Null}"/>
                </Border>

                <Border Margin="314,0,271,0" BorderThickness="1, 1, 1, 1" CornerRadius="3, 0, 0, 3" BorderBrush="{DynamicResource BlueBrush}" Background="{DynamicResource BorderBrush}">
                    <TextBox TextWrapping="Wrap" Text="complex_type" Name="textboxReturnComplexType" Background="{x:Null}" BorderBrush="{x:Null}" AllowDrop="False" IsReadOnly="True"/>
                </Border>

            </Grid>


            <Grid x:Name="gridBody" Margin="10,10,10,0" Height="211" VerticalAlignment="Top">
                <Border BorderBrush="{DynamicResource BlueBrush}" CornerRadius="3, 3, 0, 0" BorderThickness="1" Height="25" VerticalAlignment="Top">
                    <TextBox Background="{x:Null}" BorderBrush="{x:Null}" IsReadOnly="True" Foreground="{DynamicResource BorderBrush}">Body</TextBox>
                </Border>
                <Border BorderBrush="{DynamicResource BlueBrush}" CornerRadius="0, 0, 3, 3" BorderThickness="1, 0, 1, 1" Margin="0,25,0,0">
                    <StackPanel x:Name="stackPanelBody" Background="{DynamicResource BackgroundBrush}"/>
                </Border>
            </Grid>



        </StackPanel>
    </Border>
</UserControl:BlockBase>