<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- COMBOBOX : TOGGLE BUTTON -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border
        			x:Name="Border" 
        			Grid.ColumnSpan="2"
        			CornerRadius="0"
        			Background="{DynamicResource BorderBrush}"
        			BorderBrush="{DynamicResource BlueBrush}"
        			BorderThickness="1" />
            <Border 
        			Grid.Column="0"
        			CornerRadius="0" 
        			Margin="1" 
        			Background="{DynamicResource BackgroundBrush}"
        			BorderBrush="{DynamicResource BlueBrush}"
        			BorderThickness="0,0,1,0" />
            <Path 
        			x:Name="Arrow"
        			Grid.Column="1"     
        			Fill="{DynamicResource BlueBrush}"
        			HorizontalAlignment="Center"
        			VerticalAlignment="Center"
        			Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!-- COMBOBOX -->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
        						x:Name="ToggleButton" 
        						Template="{StaticResource ComboBoxToggleButton}" 
        						Grid.Column="2" 
        						Focusable="false"
        						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        						ClickMode="Press"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
        						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        						Margin="3,3,23,3"
        						VerticalAlignment="Center"
        						HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
        						Style="{x:Null}" 
        						Template="{StaticResource ComboBoxTextBox}" 
        						HorizontalAlignment="Left" 
        						VerticalAlignment="Center" 
        						Margin="3,3,23,3"
        						Focusable="True" 
        						Background="#FF3F3F3F"
        						Foreground="Green"
        						Visibility="Hidden"
        						IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
        						x:Name="Popup"
        						Placement="Bottom"
        						IsOpen="{TemplateBinding IsDropDownOpen}"
        						AllowsTransparency="True" 
        						Focusable="False"
        						PopupAnimation="Slide">

                            <Grid x:Name="DropDown"
        							SnapsToDevicePixels="True"                
        							MinWidth="{TemplateBinding ActualWidth}"
        							MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
        								x:Name="DropDownBorder"
        								Background="{DynamicResource BackgroundBrush}"
        								CornerRadius="0"
        								BorderThickness="1"
        								BorderBrush="{DynamicResource BorderBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COMBOBOX : ITEM -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
        					Padding="2"
        					SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CHECKBOX -->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
        							Width="14" 
        							Height="14" 
        							CornerRadius="7" 
        							Background="{DynamicResource BackgroundBrush}"
        							BorderThickness="2"
        							BorderBrush="{DynamicResource BorderBrush}">
                                <Path 
        								Width="7" 
        								Height="7" 
        								x:Name="CheckMark"
        								SnapsToDevicePixels="False" 
        								Fill="{DynamicResource BorderBrush}">

                                    <Path.Data>
                                        <EllipseGeometry Center="3.5,3.5" RadiusX="3.5" RadiusY="3.5"/>
                                    </Path.Data>
                                </Path>

                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
        						VerticalAlignment="Center"
        						HorizontalAlignment="Left"
        						RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#DDDDDD" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle 
        						Margin="15,0,0,0"
        						StrokeThickness="1"
        						Stroke="#60000000"
        						StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- SCROLL BAR -->
    <Style TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="20" />
                <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Width" Value="0" />
        <Setter Property="Height" Value="0" />
        <Setter Property="Opacity" Value="0.0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                   Name="Border" 
                   CornerRadius="20"
                   Background="{DynamicResource Background}"
                   BorderBrush="{DynamicResource BorderBrush}"
                   BorderThickness="2">
                        <Path
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Fill="{DynamicResource BlueBrush}"
                         Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Margin" Value="-5" />
                            <Setter TargetName="Border" Property="Panel.ZIndex" Value="99999" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="Border"
                  CornerRadius="0"
                  Background="{DynamicResource BlueBrush}"
                  BorderBrush="Transparent"
                  BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BlueBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Panel.ZIndex" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{DynamicResource Background}" CornerRadius="0"
              Opacity="0.2" BorderBrush="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="10"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="10"/>
            </Grid.RowDefinitions>
            <Border
               Grid.RowSpan="3"
               Background="Transparent"
               BorderBrush="Transparent" />
            <RepeatButton
               Grid.Row="0"                          
               Style="{DynamicResource ScrollBarButton}"
               Height="10"
               Command="ScrollBar.LineUpCommand"
               Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
               Name="PART_Track"
               Grid.Row="1"
               IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                         Style="{DynamicResource ScrollBarPageButton}"
                         Margin="9,2,9,2"
                         Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}" Margin="10,1,0,1"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                         Style="{DynamicResource ScrollBarPageButton}"
                         Margin="9,2,9,2"
                         Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
               Grid.Row="3"
               Style="{DynamicResource ScrollBarButton}"
               Height="10"
               Command="ScrollBar.LineDownCommand"
               Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="40"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MaxWidth="40"/>
            </Grid.ColumnDefinitions>
            <Border
               Grid.RowSpan="3"
               Background="Transparent"
               BorderBrush="Transparent" />
            <RepeatButton
               Grid.Row="0"                          
               Style="{DynamicResource ScrollBarButton}"
               Width="10"
               Command="ScrollBar.LineLeftCommand"
               Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
             Name="PART_Track"
             Grid.Column="1"
             IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                     Style="{DynamicResource ScrollBarPageButton}"
                     Margin="2,9,2,9"
                     Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}" Margin="1,10,1,0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                   Style="{DynamicResource ScrollBarPageButton}"
                     Margin="2,9,2,9"
                   Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
               Grid.Column="3"
               Style="{DynamicResource ScrollBarButton}"
               Width="10"
               Command="ScrollBar.LineRightCommand"
               Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <!-- BUTTON -->
    <Style x:Key="AlphaButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#444" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid   Width="{TemplateBinding Width}"  
                                Height="{TemplateBinding Height}" 
                                ClipToBounds="True">

                        <Rectangle  x:Name="outerRectangle"  
                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                                        Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"
                                        Fill="{TemplateBinding Background}" />

                        <!-- Present Content of the button. -->
                        <DockPanel Name="myContentPresenterDockPanel">
                            <ContentPresenter   x:Name="myContentPresenter" Margin="0" Content="{TemplateBinding  Content}" />
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Set properties when mouse pointer is over the button. -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property ="Rectangle.Fill" TargetName="outerRectangle" Value="{DynamicResource BlueBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Rectangle.Fill" TargetName="outerRectangle" Value="{DynamicResource BlueBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackGroundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#373737" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="outerBorder" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="outerBorder" Value="{DynamicResource BorderBrush2}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="outerBorder" Value="{DynamicResource BlueBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- BRUSHES -->
    <SolidColorBrush x:Key="BackgroundBrush">#222</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundBrush2">#FF2E2E2E</SolidColorBrush>
    <SolidColorBrush x:Key="BorderBrush">LightSteelBlue</SolidColorBrush>
    <SolidColorBrush x:Key="BorderBrush2">#555</SolidColorBrush>
    
    <SolidColorBrush x:Key="BlueBrush">#FF007ACC</SolidColorBrush>
    <SolidColorBrush x:Key="OrangeBrush">#FFD64D1A</SolidColorBrush>
    <SolidColorBrush x:Key="RedBrush">FireBrick</SolidColorBrush>

    <SolidColorBrush x:Key="ActiveButtonBackgroundBrush">#444</SolidColorBrush>

    <SolidColorBrush x:Key="Foreground" Color="LightGray" />
    
    <SolidColorBrush x:Key="PressedBrush">#EEE</SolidColorBrush>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <DrawingBrush x:Key="TilesBrush" TileMode="Tile" Viewport="0,0,15,15" ViewportUnits="Absolute">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M-10,-5 L0,-5 M0,-5 L10,-5">
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="{DynamicResource BorderBrush2}" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="CloseButtonBrush">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                    <GeometryDrawing.Geometry>
                        <EllipseGeometry RadiusX="20" RadiusY="20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <GeometryDrawing Geometry="M-7,-7 L7,7 M7,-7 L-7,7">
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="AddParameterButtonBrush">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                    <GeometryDrawing.Geometry>
                        <EllipseGeometry RadiusX="20" RadiusY="20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <GeometryDrawing Geometry="M-9,0 L9,0 M0,9 L0,-9">
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="HighlightButtonBrush">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                    <GeometryDrawing.Geometry>
                        <EllipseGeometry RadiusX="20" RadiusY="20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <GeometryDrawing Geometry="M-10,0 L11,0 M-10,-8 L5,-8 M-10, 8 L7, 8">
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="RemoveParameterButtonBrush">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                    <GeometryDrawing.Geometry>
                        <EllipseGeometry RadiusX="20" RadiusY="20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <GeometryDrawing Geometry="M-10,0 L10,0">
                    <GeometryDrawing.Pen>
                        <Pen Thickness="5" Brush="Black" />
                    </GeometryDrawing.Pen>

                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="CloseApplicationButtonBrush">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <GeometryDrawing Geometry="M-7,-7 L7,7 M7,-7 L-7,7">
                <GeometryDrawing.Pen>
                    <Pen Thickness="2.5" Brush="Black" />
                </GeometryDrawing.Pen>

            </GeometryDrawing>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="MinimizeApplicationButtonBrush" Stretch="None">
        <DrawingBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.8" ScaleY="0.8"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform Y=".4"/>
            </TransformGroup>
        </DrawingBrush.RelativeTransform>
        <DrawingBrush.Drawing>
            <GeometryDrawing Geometry="M-9,0 H9">
                <GeometryDrawing.Pen>
                    <Pen Thickness="2.5" Brush="Black" />
                </GeometryDrawing.Pen>

            </GeometryDrawing>
        </DrawingBrush.Drawing>
    </DrawingBrush>

</ResourceDictionary>